buildscript {
    ext {
    }

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        jcenter()
        mavenCentral()
        maven {
            name "typesafe-maven-release"
            url "https://repo.typesafe.com/typesafe/maven-releases"
        }
        ivy {
            name "typesafe-ivy-release"
            url "https://repo.typesafe.com/typesafe/ivy-releases"
            layout "ivy"
        }
    }

    dependencies {
    }
}

apply plugin: 'scala'
apply plugin: 'play'
apply plugin: 'idea'

repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    jcenter()
    mavenCentral()
    maven {
        name "typesafe-maven-release"
        url "https://repo.typesafe.com/typesafe/maven-releases"
    }
    ivy {
        name "typesafe-ivy-release"
        url "https://repo.typesafe.com/typesafe/ivy-releases"
        layout "ivy"
    }
}


dependencies {

    implementation("com.google.guava:guava:$guavaVersion")
    implementation "commons-io:commons-io:$commonsioVersion"
    implementation "org.apache.commons:commons-lang3:$commonslang3Version"
    implementation "commons-beanutils:commons-beanutils:$commonsbeanutilsVersion"
    implementation "commons-codec:commons-codec:$commonscodecVersion"
    implementation "com.google.code.gson:gson:$gsonVersion"

    compileOnly("org.projectlombok:lombok:$lombokVersion")
    annotationProcessor("org.projectlombok:lombok:$lombokVersion")
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testCompileOnly "org.projectlombok:lombok:$lombokVersion"

    implementation("org.scala-lang:scala-library:$scalaLibraryVersion")
    implementation("org.slf4j:slf4j-simple:$slf4jVersion")

    implementation "com.typesafe.play:play_$scalaVersion:$playVersion"
    implementation "com.typesafe.play:play-logback_$scalaVersion:$playVersion"

    testImplementation "com.typesafe.play:play-test_$scalaVersion:$playVersion"
    testImplementation "org.scalatestplus.play:scalatestplus-play_$scalaVersion:$scalatestplusPlayVersion"
}

wrapper {
    gradleVersion = '6.0.1'
    distributionType = Wrapper.DistributionType.ALL
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.with {
        additionalParameters = ["-Xexperimental"]
    }
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked"
    options.compilerArgs << "-Xlint:deprecation"
}

tasks.withType(Test) {
    testLogging {
        events 'started', 'passed'
    }
}

test {
    testLogging.showStandardStreams = true
}

model {
    components {
        play {
            platform play: '2.5.14', scala: '2.11', java: '1.8'
            injectedRoutesGenerator = true

            sources {
                twirlTemplates {
                    defaultImports = TwirlImports.JAVA
                }
            }
        }
    }
}


idea {
    module {
        sourceDirs += file("app")
        testSourceDirs += file("test")

        def generated = [
                file("$buildDir/src/play/binary/routesScalaSources"),
                file("$buildDir/src/play/binary/twirlTemplatesScalaSources")
        ]
        generated.each { src ->
            sourceDirs += src
            generatedSourceDirs += src
        }
        scopes.COMPILE = [plus: [configurations.play], minus: []]
        scopes.RUNTIME = [plus: [configurations.playRun], minus: [configurations.play]]
        scopes.TEST = [plus: [configurations.playTest], minus: [configurations.playRun]]
    }
}

